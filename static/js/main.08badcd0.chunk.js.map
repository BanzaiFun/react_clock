{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","date","Date","clockName","timerId","randomName","this","window","setInterval","setState","console","log","toLocaleTimeString","oldName","clearInterval","className","Component","App","hasClock","document","addEventListener","e","button","eve","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,KACVC,UAAWV,KAHf,EAMEW,QAAU,EANZ,EAQEC,WAAa,EARf,uDAUE,WAAqB,IAAD,OAClBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,KAAM,IAAIC,OAE1BQ,QAAQC,IAAI,EAAKX,MAAMC,KAAKW,wBAC3B,KAEHN,KAAKD,WAAaE,OAAOC,aAAY,WACnC,IAAMK,EAAU,EAAKb,MAAMG,UAE3B,EAAKM,SAAS,CAAEN,UAAWV,MAE3BiB,QAAQC,IAAR,uBAA4BE,EAA5B,eAA0C,EAAKb,MAAMG,cACpD,QAvBP,kCA0BE,WACEI,OAAOO,cAAcR,KAAKF,SAC1BG,OAAOO,cAAcR,KAAKD,cA5B9B,oBA+BE,WACE,MAA4BC,KAAKN,MAAzBG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,KAEnB,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,IAGF,YAED,sBAAMY,UAAU,cAAhB,SACGd,EAAKW,8BA3ChB,GAA2BI,aCLdC,EAAb,4MACEjB,MAAyB,CACvBkB,UAAU,GAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GACjB,IAAbA,EAAEC,QACJ,EAAKb,SAAS,CAAES,UAAU,OAI9BC,SAASC,iBAAiB,eAAe,SAACG,GACxCA,EAAIC,iBACe,IAAfD,EAAID,QACN,EAAKb,SAAS,CAAES,UAAU,SAflC,oBAoBE,WACE,IAAQA,EAAaZ,KAAKN,MAAlBkB,SAER,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,WA1BrB,GAAyBF,aCLzBS,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.08badcd0.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  date: Date;\n  clockName: string;\n};\n\nexport class Clock extends Component<{}, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  randomName = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n\n    this.randomName = window.setInterval(() => {\n      const oldName = this.state.clockName;\n\n      this.setState({ clockName: getRandomName() });\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${oldName} to ${this.state.clockName}`);\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.randomName);\n  }\n\n  render() {\n    const { clockName, date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', (e) => {\n      if (e.button === 0) {\n        this.setState({ hasClock: true });\n      }\n    });\n\n    document.addEventListener('contextmenu', (eve) => {\n      eve.preventDefault();\n      if (eve.button === 2) {\n        this.setState({ hasClock: false });\n      }\n    });\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}